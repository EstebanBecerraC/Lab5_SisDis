// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.6.1
// source: registros.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	Solicitud_Info_Solicitar_Info_FullMethodName = "/Solicitud_Info/Solicitar_Info"
)

// Solicitud_InfoClient is the client API for Solicitud_Info service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type Solicitud_InfoClient interface {
	Solicitar_Info(ctx context.Context, in *Mensaje, opts ...grpc.CallOption) (*Respuesta, error)
}

type solicitud_InfoClient struct {
	cc grpc.ClientConnInterface
}

func NewSolicitud_InfoClient(cc grpc.ClientConnInterface) Solicitud_InfoClient {
	return &solicitud_InfoClient{cc}
}

func (c *solicitud_InfoClient) Solicitar_Info(ctx context.Context, in *Mensaje, opts ...grpc.CallOption) (*Respuesta, error) {
	out := new(Respuesta)
	err := c.cc.Invoke(ctx, Solicitud_Info_Solicitar_Info_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Solicitud_InfoServer is the server API for Solicitud_Info service.
// All implementations must embed UnimplementedSolicitud_InfoServer
// for forward compatibility
type Solicitud_InfoServer interface {
	Solicitar_Info(context.Context, *Mensaje) (*Respuesta, error)
	mustEmbedUnimplementedSolicitud_InfoServer()
}

// UnimplementedSolicitud_InfoServer must be embedded to have forward compatible implementations.
type UnimplementedSolicitud_InfoServer struct {
}

func (UnimplementedSolicitud_InfoServer) Solicitar_Info(context.Context, *Mensaje) (*Respuesta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Solicitar_Info not implemented")
}
func (UnimplementedSolicitud_InfoServer) mustEmbedUnimplementedSolicitud_InfoServer() {}

// UnsafeSolicitud_InfoServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to Solicitud_InfoServer will
// result in compilation errors.
type UnsafeSolicitud_InfoServer interface {
	mustEmbedUnimplementedSolicitud_InfoServer()
}

func RegisterSolicitud_InfoServer(s grpc.ServiceRegistrar, srv Solicitud_InfoServer) {
	s.RegisterService(&Solicitud_Info_ServiceDesc, srv)
}

func _Solicitud_Info_Solicitar_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Mensaje)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Solicitud_InfoServer).Solicitar_Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: Solicitud_Info_Solicitar_Info_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Solicitud_InfoServer).Solicitar_Info(ctx, req.(*Mensaje))
	}
	return interceptor(ctx, in, info, handler)
}

// Solicitud_Info_ServiceDesc is the grpc.ServiceDesc for Solicitud_Info service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Solicitud_Info_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Solicitud_Info",
	HandlerType: (*Solicitud_InfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Solicitar_Info",
			Handler:    _Solicitud_Info_Solicitar_Info_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "registros.proto",
}
